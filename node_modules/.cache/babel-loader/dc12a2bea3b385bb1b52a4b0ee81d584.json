{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Desktop/ChakraUI/reacthtmlproject/src/context/ShopContext.js\";\nimport React, { Component } from 'react';\nimport Client from 'shopify-buy';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShopContext = /*#__PURE__*/React.createContext();\nconst client = Client.buildClient({\n  domain: 'sacheustore.myshopify.com',\n  storefrontAccessToken: '251aff87463a43306b6c981179644ecf' //domain: 'al-rnd.myshopify.com',\n  //storefrontAccessToken: '4641c4578cc6d4dba0161025ec0e2746'\n\n}); //console.log({client})\n\nclass ShopProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      product: {},\n      products: [],\n      checkout: {},\n      collectionId: {},\n      isCartOpen: false,\n      isMenuOpen: false\n    };\n\n    this.createCheckout = async () => {\n      const checkout = await client.checkout.create();\n      localStorage.setItem(\"checkout_id\", checkout.id);\n      this.setState({\n        checkout: checkout\n      });\n    };\n\n    this.fetchCheckout = checkoutId => {\n      client.checkout.fetch(checkoutId).then(checkout => {\n        this.setState({\n          checkout: checkout\n        });\n      });\n    };\n\n    this.fetchColletion = collectionId => {\n      client.collection.fetch(collectionId).then(collection => {\n        this.setState({\n          collection: collection\n        });\n      });\n    };\n\n    this.addItemToCheckout = async (variantId, quantity) => {\n      const lineItemsToAdd = [{\n        variantId,\n        quantity: parseInt(quantity, 10)\n      }];\n      const checkout = await client.checkout.addLineItems(this.state.checkout.id, lineItemsToAdd);\n      this.setState({\n        checkout: checkout\n      });\n      this.openCart();\n    };\n\n    this.removeLineItem = async lineItemIdsToRemove => {\n      const checkout = await client.checkout.removeLineItems(this.state.checkout.id, lineItemIdsToRemove);\n      this.setState({\n        checkout: checkout\n      });\n    };\n\n    this.fetchAllProducts = async () => {\n      const products = await client.product.fetchAll();\n      this.setState({\n        products: products\n      }); //console.log(products);\n    };\n\n    this.fetchAllCollectionProducts = async () => {\n      const collections = await client.collection.fetchAllWithProducts();\n      this.setState({\n        collections: collections\n      }); //console.log(collections);\n    };\n\n    this.fetchCollectionWithHandle = async collectionId => {\n      //const collectionsdata = await client.collection.fetchWithProducts(collectionId)\n      const collectionsdata = await client.collection.fetchWithProducts('Z2lkOi8vc2hvcGlmeS9Db2xsZWN0aW9uLzI3MjE2NDA2MTM3MA==');\n      this.setState({\n        collectionsdata: collectionsdata\n      });\n      console.log('cccccccc', collectionsdata); //console.log('xxxxxxxx',collectionsdata.products);\n    };\n\n    this.fetchProductWithHandle = async handle => {\n      const product = await client.product.fetchByHandle(handle);\n      this.setState({\n        product: product\n      });\n    };\n\n    this.closeCart = () => {\n      this.setState({\n        isCartOpen: false\n      });\n    };\n\n    this.openCart = () => {\n      this.setState({\n        isCartOpen: true\n      });\n    };\n\n    this.closeMenu = () => {\n      this.setState({\n        isMenuOpen: false\n      });\n    };\n\n    this.openMenu = () => {\n      this.setState({\n        isMenuOpen: true\n      });\n    };\n  }\n\n  componentDidMount() {\n    if (localStorage.checkout_id) {\n      this.fetchCheckout(localStorage.checkout_id);\n    } else {\n      this.createCheckout();\n    }\n    /* if(localStorage.collectionId){\n        this.fetchColletion(localStorage.collectionId)\n    } */\n\n  }\n\n  render() {\n    console.log(this.state.checkout);\n    return /*#__PURE__*/_jsxDEV(ShopContext.Provider, {\n      value: { ...this.state,\n        fetchAllProducts: this.fetchAllProducts,\n        fetchAllCollectionProducts: this.fetchAllCollectionProducts,\n        fetchCollectionWithHandle: this.fetchCollectionWithHandle,\n        fetchProductWithHandle: this.fetchProductWithHandle,\n        addItemToCheckout: this.addItemToCheckout,\n        removeLineItem: this.removeLineItem,\n        closeCart: this.closeCart,\n        openCart: this.openCart,\n        closeMenu: this.closeMenu,\n        openMenu: this.openMenu\n      },\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst ShopConsumer = ShopContext.Consumer;\nexport { ShopConsumer, ShopContext };\nexport default ShopProvider;","map":{"version":3,"sources":["/home/ubuntu/Desktop/ChakraUI/reacthtmlproject/src/context/ShopContext.js"],"names":["React","Component","Client","ShopContext","createContext","client","buildClient","domain","storefrontAccessToken","ShopProvider","state","product","products","checkout","collectionId","isCartOpen","isMenuOpen","createCheckout","create","localStorage","setItem","id","setState","fetchCheckout","checkoutId","fetch","then","fetchColletion","collection","addItemToCheckout","variantId","quantity","lineItemsToAdd","parseInt","addLineItems","openCart","removeLineItem","lineItemIdsToRemove","removeLineItems","fetchAllProducts","fetchAll","fetchAllCollectionProducts","collections","fetchAllWithProducts","fetchCollectionWithHandle","collectionsdata","fetchWithProducts","console","log","fetchProductWithHandle","handle","fetchByHandle","closeCart","closeMenu","openMenu","componentDidMount","checkout_id","render","props","children","ShopConsumer","Consumer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Client from 'shopify-buy'\n\nconst ShopContext = React.createContext()\n\nconst client = Client.buildClient({\n    domain: 'sacheustore.myshopify.com',\n    storefrontAccessToken: '251aff87463a43306b6c981179644ecf'\n    //domain: 'al-rnd.myshopify.com',\n    //storefrontAccessToken: '4641c4578cc6d4dba0161025ec0e2746'\n});\n\n//console.log({client})\nclass ShopProvider extends Component {\n\n\n    state = {\n        product: {},\n        products: [],\n        checkout: {},\n        collectionId: {},\n        isCartOpen: false,\n        isMenuOpen: false\n    }\n\n    componentDidMount() {\n        if (localStorage.checkout_id) {\n            this.fetchCheckout(localStorage.checkout_id)\n        } else {\n            this.createCheckout()\n        }\n        /* if(localStorage.collectionId){\n            this.fetchColletion(localStorage.collectionId)\n        } */\n    }\n\n    createCheckout = async () => {\n        const checkout = await client.checkout.create()\n        localStorage.setItem(\"checkout_id\", checkout.id)\n        this.setState({ checkout: checkout })\n    }\n\n    fetchCheckout = (checkoutId) => {\n        client.checkout\n            .fetch(checkoutId)\n            .then((checkout) => {\n                this.setState({ checkout: checkout })\n            })\n    }\n\n    fetchColletion = (collectionId) => {\n        client.collection\n            .fetch(collectionId)\n            .then((collection) => {\n                this.setState({ collection: collection })\n            })\n    }\n\n    addItemToCheckout = async (variantId, quantity) => {\n        const lineItemsToAdd = [\n            {\n                variantId,\n                quantity: parseInt(quantity, 10)\n            }\n        ]\n        const checkout = await client.checkout.addLineItems(this.state.checkout.id, lineItemsToAdd)\n        this.setState({ checkout: checkout })\n\n        this.openCart()\n    }\n\n    removeLineItem = async (lineItemIdsToRemove) => {\n        const checkout = await client.checkout.removeLineItems(this.state.checkout.id, lineItemIdsToRemove)\n        this.setState({ checkout: checkout })\n    }\n\n    fetchAllProducts = async () => {\n        const products = await client.product.fetchAll();\n        this.setState({ products: products })\n        //console.log(products);\n    }\n\n    fetchAllCollectionProducts = async () => {\n        const collections = await client.collection.fetchAllWithProducts();\n        this.setState({ collections: collections })\n        //console.log(collections);\n    }\n\n    fetchCollectionWithHandle = async (collectionId) => {\n        //const collectionsdata = await client.collection.fetchWithProducts(collectionId)\n        const collectionsdata = await client.collection.fetchWithProducts('Z2lkOi8vc2hvcGlmeS9Db2xsZWN0aW9uLzI3MjE2NDA2MTM3MA==')\n        this.setState({ collectionsdata: collectionsdata })\n        console.log('cccccccc', collectionsdata);\n        //console.log('xxxxxxxx',collectionsdata.products);\n    }\n\n    fetchProductWithHandle = async (handle) => {\n        const product = await client.product.fetchByHandle(handle)\n        this.setState({ product: product })\n    }\n\n    closeCart = () => { this.setState({ isCartOpen: false }) }\n    openCart = () => { this.setState({ isCartOpen: true }) }\n    closeMenu = () => { this.setState({ isMenuOpen: false }) }\n    openMenu = () => { this.setState({ isMenuOpen: true }) }\n\n\n\n\n    render() {\n        console.log(this.state.checkout)\n        return (\n            <ShopContext.Provider\n                value={{\n                    ...this.state,\n                    fetchAllProducts: this.fetchAllProducts,\n                    fetchAllCollectionProducts: this.fetchAllCollectionProducts,\n                    fetchCollectionWithHandle: this.fetchCollectionWithHandle,\n                    fetchProductWithHandle: this.fetchProductWithHandle,\n                    addItemToCheckout: this.addItemToCheckout,\n                    removeLineItem: this.removeLineItem,\n                    closeCart: this.closeCart,\n                    openCart: this.openCart,\n                    closeMenu: this.closeMenu,\n                    openMenu: this.openMenu\n                }}>\n                {this.props.children}\n            </ShopContext.Provider>\n        )\n    }\n}\n\nconst ShopConsumer = ShopContext.Consumer\n\nexport { ShopConsumer, ShopContext }\n\nexport default ShopProvider\n"]},"metadata":{},"sourceType":"module"}