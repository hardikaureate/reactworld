{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Desktop/ChakraUI/reacthtmlproject/src/components/model/Model.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from \"react\";\nimport styles from \"./modal.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Modal = ({\n  modalStyle,\n  children,\n  show,\n  onClose,\n  backdropStyle\n}) => {\n  _s();\n\n  const modalRef = useRef(null);\n  useEffect(() => {\n    if (show) {\n      modalRef.current.classList.add(styles.visible);\n    } else {\n      modalRef.current.classList.remove(styles.visible);\n    }\n  }, [show]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: modalRef,\n      style: backdropStyle,\n      className: `${styles.modal}`,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        style: {\n          width: 60,\n          height: 40,\n          position: \"absolute\",\n          top: 0,\n          right: 0,\n          margin: \"1rem\",\n          cursor: \"pointer\"\n        },\n        className: styles.close__btn,\n        children: \"Close \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        style: modalStyle,\n        className: styles.modal__wrap,\n        children: [\" \", children, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 18\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 14\n  }, this);\n};\n\n_s(Modal, \"iXNJws+mDn9J+ZcpHudMXHGV85c=\");\n\n_c = Modal;\nexport default Modal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"sources":["/home/ubuntu/Desktop/ChakraUI/reacthtmlproject/src/components/model/Model.js"],"names":["React","useEffect","useRef","styles","Modal","modalStyle","children","show","onClose","backdropStyle","modalRef","current","classList","add","visible","remove","modal","width","height","position","top","right","margin","cursor","close__btn","modal__wrap"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,QAAd;AAAwBC,EAAAA,IAAxB;AAA8BC,EAAAA,OAA9B;AAAuCC,EAAAA;AAAvC,CAAD,KAA4D;AAAA;;AACtE,QAAMC,QAAQ,GAAGR,MAAM,CAAC,IAAD,CAAvB;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIM,IAAJ,EAAU;AACNG,MAAAA,QAAQ,CAACC,OAAT,CAAiBC,SAAjB,CAA2BC,GAA3B,CAA+BV,MAAM,CAACW,OAAtC;AACH,KAFD,MAEO;AACHJ,MAAAA,QAAQ,CAACC,OAAT,CAAiBC,SAAjB,CAA2BG,MAA3B,CAAkCZ,MAAM,CAACW,OAAzC;AACH;AACJ,GANQ,EAMN,CAACP,IAAD,CANM,CAAT;AAOA,sBAAS,QACL,KADK,CACC,QADD;AAAA,4BAEL;AACI,MAAA,GAAG,EAAKG,QADZ;AAEA,MAAA,KAAK,EAAKD,aAFV;AAGA,MAAA,SAAS,EAAM,GAAEN,MAAM,CAACa,KAAM,EAH9B;AAAA,8BAIA;AACO,QAAA,OAAO,EAAKR,OADnB;AAEA,QAAA,KAAK,EACD;AACIS,UAAAA,KAAK,EAAE,EADX;AAEIC,UAAAA,MAAM,EAAE,EAFZ;AAGIC,UAAAA,QAAQ,EAAE,UAHd;AAIIC,UAAAA,GAAG,EAAE,CAJT;AAKIC,UAAAA,KAAK,EAAE,CALX;AAMIC,UAAAA,MAAM,EAAE,MANZ;AAOIC,UAAAA,MAAM,EAAE;AAPZ,SAHJ;AAaA,QAAA,SAAS,EAAKpB,MAAM,CAACqB,UAbrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJA,oBAoBS;AACL,QAAA,KAAK,EAAKnB,UADL;AAET,QAAA,SAAS,EAAKF,MAAM,CAACsB,WAFZ;AAAA,wBAE8BnB,QAF9B;AAAA;AAAA;AAAA;AAAA;AAAA,cApBT;AAAA;AAAA;AAAA;AAAA;AAAA,YAFK;AAAA;AAAA;AAAA;AAAA;AAAA,UAAT;AA6BH,CAtCD;;GAAMF,K;;KAAAA,K;AAwCN,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport styles from \"./modal.module.css\";\n\nconst Modal = ({ modalStyle, children, show, onClose, backdropStyle }) => {\n    const modalRef = useRef(null);\n    useEffect(() => {\n        if (show) {\n            modalRef.current.classList.add(styles.visible);\n        } else {\n            modalRef.current.classList.remove(styles.visible);\n        }\n    }, [show]);\n    return ( <\n        React.Fragment >\n        <\n        div ref = { modalRef }\n        style = { backdropStyle }\n        className = { `${styles.modal}` } >\n        <\n        button onClick = { onClose }\n        style = {\n            {\n                width: 60,\n                height: 40,\n                position: \"absolute\",\n                top: 0,\n                right: 0,\n                margin: \"1rem\",\n                cursor: \"pointer\"\n            }\n        }\n        className = { styles.close__btn } >\n\n        Close <\n        /button> <\n        div style = { modalStyle }\n        className = { styles.modal__wrap } > { children } <\n        /div> <\n        /div> <\n        /React.Fragment>\n    );\n};\n\nexport default Modal;"]},"metadata":{},"sourceType":"module"}